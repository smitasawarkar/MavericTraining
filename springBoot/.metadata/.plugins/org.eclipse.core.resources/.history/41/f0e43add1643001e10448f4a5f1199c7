package com.maveric.datavisualization.entities;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.SequenceGenerator;
import jakarta.validation.constraints.NotBlank;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;


@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
public class Transaction {
	 @Id
	 @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "txn_seq")
	 @SequenceGenerator(name = "txn_seq", sequenceName = "txn_sequence", initialValue = 1000, allocationSize = 1)
	 private long id;
	 
	 
	 @Column(name = "userId")
	 private long userId;
	
	 @NotBlank()
	 @Column(name = "cardType")
	 private String cardType;
	 
	 @NotBlank()
	 @Column(name = "expType")
	 private String expType;
	 
	 @NotBlank()
	 @Column(name = "city")
	 private String city;
	 
	 @NotBlank()
	 @Column(name = "gender")
	 private String gender;
	 
	 @NotBlank()
	 @Column(name = "status")
	 private String status;
	
	 @CreationTimestamp
	 @Column(name = "creationDate")
	 private LocalDate creationDate;
	
//	 @UpdateTimestamp
//	 @Column(name = "updatedDate")
//	 private LocalDate updatedDate;
	 
	 @CreationTimestamp
	 @Column(name = "txnTime")
	 private LocalDateTime txnTime;
	 
	 @UpdateTimestamp
	 @Column(name = "updatedTime")
		private LocalDateTime updatedTime;
	 
	
	 @Column(name = "amount")
		private double amount;
	 




	
	 

	 
	 
}
